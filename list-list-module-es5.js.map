{"version":3,"sources":["./src/app/list/list.page.html","./src/app/list/list.module.ts","./src/app/list/list.page.scss","./src/app/list/list.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,olD;;;;;;;;;;;;;;;;;;;;;;;ACA2D;AACZ;AACF;AACA;AACE;AACW;AACnB;AAkBvC;IAAA;IAA6B,CAAC;IAAjB,cAAc;QAhB1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,uEAAkB,CAAC,OAAO,EAAE;gBAC5B,4DAAY,CAAC,QAAQ,CAAC;oBACpB;wBACE,IAAI,EAAE,EAAE;wBACR,SAAS,EAAE,mDAAQ;qBACpB;iBACF,CAAC;aACH;YACD,OAAO,EAAC,CAAC,8DAAgB,CAAC;YAC1B,YAAY,EAAE,CAAC,mDAAQ,CAAC;SACzB,CAAC;OACW,cAAc,CAAG;IAAD,qBAAC;CAAA;AAAH;;;;;;;;;;;;ACxB3B,+DAA+D,mI;;;;;;;;;;;;;;;;;;ACAb;AACG;AAOrD;IAyCE,kBAAoB,GAAe;QAAf,QAAG,GAAH,GAAG,CAAY;QAvC3B,UAAK,GAAG;YACd,OAAO;YACP,MAAM;YACN,MAAM;YACN,UAAU;YACV,YAAY;YACZ,aAAa;YACb,mBAAmB;YACnB,MAAM;YACN,WAAW;YACX,OAAO;SACR,CAAC;QAEK,aAAQ,GAAG;YAChB;gBACE,KAAK,EAAE,MAAM;gBACb,GAAG,EAAE,OAAO;gBACZ,IAAI,EAAE,MAAM;aACb;YACD;gBACE,KAAK,EAAE,cAAc;gBACrB,GAAG,EAAE,OAAO;gBACZ,IAAI,EAAE,MAAM;aACb;YACD;gBACE,KAAK,EAAE,gBAAgB;gBACvB,GAAG,EAAE,SAAS;gBACd,IAAI,EAAE,MAAM;aACb;SACF,CAAC;QAEF,SAAI,GAAG;YACL,MAAM,EAAE,WAAW;YACnB,QAAQ,EAAE,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC;YAC5C,QAAQ,EAAE,cAAc,CAAC,OAAO,CAAC,UAAU,CAAC;SAC7C;QAGM,UAAK,GAAyD,EAAE,CAAC;QAEtE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;YAC3B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;gBACd,KAAK,EAAE,OAAO,GAAG,CAAC;gBAClB,IAAI,EAAE,gBAAgB,GAAG,CAAC;gBAC1B,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;aAChE,CAAC,CAAC;SACJ;IACH,CAAC;IASD,2BAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,UAAC,GAAG;YAC3C,KAAI,CAAC,OAAO,GAAG,GAAG;QACpB,CAAC,CAAC;IACJ,CAAC;;gBArBwB,+DAAU;;IAzCxB,QAAQ;QALpB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,oIAA6B;;SAE9B,CAAC;+EA0CyB,+DAAU;OAzCxB,QAAQ,CAgEpB;IAAD,eAAC;CAAA;AAhEoB","file":"list-list-module-es5.js","sourcesContent":["module.exports = \"<mdb-navbar SideClass=\\\"navbar navbar-expand-lg navbar-dark purple lighten-1\\\" [containerInside]=\\\"false\\\">\\n\\n  <!-- Navbar brand -->\\n  <mdb-navbar-brand><a class=\\\"navbar-brand\\\" href=\\\"#\\\">Logo</a></mdb-navbar-brand>\\n\\n  <!-- Collapsible content -->\\n  <links>\\n\\n    <!-- Links -->\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link waves-light\\\" [routerLink]='[\\\"/home\\\"]' mdbWavesEffect>Home<span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link waves-light\\\" [routerLink]='[\\\"/update\\\"]'mdbWavesEffect>update</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link waves-light\\\" [routerLink]='[\\\"/view\\\"]'mdbWavesEffect>View</a>\\n      </li>\\n\\n      \\n\\n    </ul>\\n    <!-- Links -->\\n\\n    <ul class=\\\"navbar-nav ml-auto nav-flex-icons\\\">\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\">1 <mdb-icon fas icon=\\\"envelope\\\"></mdb-icon></a>\\n      </li>\\n      <li class=\\\"nav-item avatar dropdown\\\" dropdown>\\n        <a dropdownToggle mdbWavesEffect type=\\\"button\\\" class=\\\"nav-link dropdown-toggle waves-light\\\" mdbWavesEffect>\\n        </a>\\n        <div *dropdownMenu class=\\\"dropdown-menu dropdown-menu-right dropdown dropdown-primary\\\" role=\\\"menu\\\">\\n          <a class=\\\"dropdown-item waves-light\\\" mdbWavesEffect href=\\\"#\\\">My account</a>\\n          <a class=\\\"dropdown-item waves-light\\\" mdbWavesEffect href=\\\"#\\\">Log out</a>\\n        </div>\\n      </li>\\n    </ul>\\n  </links>\\n  <!-- Collapsible content -->\\n\\n</mdb-navbar>\\n\\n\"","import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { MDBBootstrapModule } from 'angular-bootstrap-md';\nimport { ListPage } from './list.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MDBBootstrapModule.forRoot(),\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ListPage\n      }\n    ])\n  ],\n  schemas:[NO_ERRORS_SCHEMA],\n  declarations: [ListPage]\n})\nexport class ListPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3QvbGlzdC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../_service/api.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: 'list.page.html',\n  styleUrls: ['list.page.scss']\n})\nexport class ListPage implements OnInit {\n  private selectedItem: any;\n  private icons = [\n    'flask',\n    'wifi',\n    'beer',\n    'football',\n    'basketball',\n    'paper-plane',\n    'american-football',\n    'boat',\n    'bluetooth',\n    'build'\n  ];\n\n  public appPages = [\n    {\n      title: 'Home',\n      url: '/home',\n      icon: 'home'\n    },\n    {\n      title: 'Vaccine List',\n      url: '/list',\n      icon: 'list'\n    },\n    {\n      title: 'Update Vaccine',\n      url: '/update',\n      icon: 'list'\n    }\n  ];\n\n  data = {\n    action: \"getrecord\",\n    email_id: sessionStorage.getItem('email_id'),\n    password: sessionStorage.getItem('password')\n  }\n\n\n  public items: Array<{ title: string; note: string; icon: string }> = [];\n  constructor(private api: ApiService) {\n    for (let i = 1; i < 11; i++) {\n      this.items.push({\n        title: 'Item ' + i,\n        note: 'This is item #' + i,\n        icon: this.icons[Math.floor(Math.random() * this.icons.length)]\n      });\n    }\n  }\n\n\n\n\n  records: any\n\n\n\n  ngOnInit() {\n    this.api.getRecords(this.data).subscribe((res) => {\n      this.records = res\n    })\n  }\n\n}\n"],"sourceRoot":""}